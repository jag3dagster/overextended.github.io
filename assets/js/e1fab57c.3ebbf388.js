"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[847],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(9496);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(r),m=l,b=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(b,o(o({ref:t},u),{},{components:r})):n.createElement(b,o({ref:t},u))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=r.length,o=new Array(i);o[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:l,o[1]=a;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},959:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>s});var n=r(4250),l=(r(9496),r(9613));const i={},o=void 0,a={unversionedId:"ox_lib/GetClosestVehicle/Client",id:"ox_lib/GetClosestVehicle/Client",title:"Client",description:"lib.getClosestVehicle",source:"@site/docs/ox_lib/GetClosestVehicle/Client.md",sourceDirName:"ox_lib/GetClosestVehicle",slug:"/ox_lib/GetClosestVehicle/Client",permalink:"/docs/ox_lib/GetClosestVehicle/Client",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_lib/GetClosestVehicle/Client.md",tags:[],version:"current",lastUpdatedAt:1679348775,formattedLastUpdatedAt:"Mar 20, 2023",frontMatter:{},sidebar:"ox_lib",previous:{title:"Client",permalink:"/docs/ox_lib/GetClosestPlayer/Client"},next:{title:"Client",permalink:"/docs/ox_lib/GetNearbyPlayers/Client"}},c={},s=[{value:"lib.getClosestVehicle",id:"libgetclosestvehicle",level:3}],u={toc:s};function p(e){let{components:t,...r}=e;return(0,l.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"libgetclosestvehicle"},"lib.getClosestVehicle"),(0,l.kt)("p",null,"Get the id and coords of the closest vehicle to a set of coordinates."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-lua"},"function lib.getClosestVehicle(coords, maxDistance, includePlayerVehicle) end\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"coords: ",(0,l.kt)("inlineCode",{parentName:"li"},"vector3"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The coords to check from."))),(0,l.kt)("li",{parentName:"ul"},"maxDistance: ",(0,l.kt)("inlineCode",{parentName:"li"},"number"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The max distance to check."))),(0,l.kt)("li",{parentName:"ul"},"includePlayerVehicle: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Whether or not to include the player's current vehicle.")))),(0,l.kt)("p",null,"Return:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"vehicle?: ",(0,l.kt)("inlineCode",{parentName:"li"},"number")),(0,l.kt)("li",{parentName:"ul"},"vehicleCoords?: ",(0,l.kt)("inlineCode",{parentName:"li"},"vector3"))))}p.isMDXComponent=!0}}]);