"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[423],{9613:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var a=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(r),d=n,k=p["".concat(c,".").concat(d)]||p[d]||m[d]||l;return r?a.createElement(k,i(i({ref:t},u),{},{components:r})):a.createElement(k,i({ref:t},u))}));function k(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},265:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(2564),n=(r(9496),r(9613));const l={title:"Callbacks"},i=void 0,o={unversionedId:"ox_core/Player/Client/callbacks",id:"ox_core/Player/Client/callbacks",title:"Callbacks",description:"ox:getStatus",source:"@site/docs/ox_core/Player/Client/callbacks.md",sourceDirName:"ox_core/Player/Client",slug:"/ox_core/Player/Client/callbacks",permalink:"/docs/ox_core/Player/Client/callbacks",draft:!1,editUrl:"https://github.com/overextended/overextended.github.io/tree/main/docs/ox_core/Player/Client/callbacks.md",tags:[],version:"current",lastUpdatedAt:1683587426,formattedLastUpdatedAt:"May 8, 2023",frontMatter:{title:"Callbacks"},sidebar:"ox_core",previous:{title:"Client",permalink:"/docs/ox_core/Player/Client/"},next:{title:"Events",permalink:"/docs/ox_core/Player/Client/events"}},c={},s=[{value:"ox:getStatus",id:"oxgetstatus",level:3},{value:"ox:getLicense",id:"oxgetlicense",level:3},{value:"ox:getNearbyVehicles",id:"oxgetnearbyvehicles",level:3}],u={toc:s},p="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h3",{id:"oxgetstatus"},"ox:getStatus"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"lib.callback.await('ox:getStatus', delay, targetId, statusName)\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"delay: ",(0,n.kt)("inlineCode",{parentName:"li"},"number")),(0,n.kt)("li",{parentName:"ul"},"targetId: ",(0,n.kt)("inlineCode",{parentName:"li"},"number"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The server id for the player to get statuses for."))),(0,n.kt)("li",{parentName:"ul"},"statusName?: ",(0,n.kt)("inlineCode",{parentName:"li"},"string"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The name of the status (i.e. hunger). Can be omitted to return all statuses.")))),(0,n.kt)("h3",{id:"oxgetlicense"},"ox:getLicense"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"lib.callback.await('ox:getLicense', delay, licenseName, targetId)\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"delay: ",(0,n.kt)("inlineCode",{parentName:"li"},"number")),(0,n.kt)("li",{parentName:"ul"},"licenseName: ",(0,n.kt)("inlineCode",{parentName:"li"},"string"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The name of the license to get data for. Can be omitted to return all licenses."))),(0,n.kt)("li",{parentName:"ul"},"targetId?: ",(0,n.kt)("inlineCode",{parentName:"li"},"number"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The server id to get license data for, defaulting to the current player.")))),(0,n.kt)("h3",{id:"oxgetnearbyvehicles"},"ox:getNearbyVehicles"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-lua"},"lib.callback.register('ox:getNearbyVehicles', function(radius)\n")),(0,n.kt)("p",null,"Returns an array of vehicle netids within a given radius of the player's location."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"radius?: ",(0,n.kt)("inlineCode",{parentName:"li"},"number"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The radius from the player's location to return vehicles.")))))}m.isMDXComponent=!0}}]);